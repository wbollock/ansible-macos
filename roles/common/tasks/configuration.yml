---

- name: Set home path for MacOS
  set_fact:
    home_path: "/Users/{{ user }}"
  when: ansible_facts['os_family']|lower == 'darwin' 

- name: Set home path for Debian
  set_fact:
    home_path: "/home/{{ user }}"
  when: ansible_facts['os_family']|lower == 'debian' 

- name: Set various facts for MacOS
  set_fact:
    tmuxconf_path: "{{ home_path }}/.tmux/tmux.conf"
    vimrc_path: "{{ home_path }}/.vimrc"
    vimwiki_path: "{{ home_path }}/vimwiki"
    zprezto_path: "{{ home_path }}/.zprezto"
    vscode_path: "{{ home_path }}/Library/Application Support/Code/User/settings.json"
  when: ansible_facts['os_family']|lower == 'darwin' 

- name: Set facts for Debian
  set_fact:
    tmuxconf_path: "{{ home_path }}/.tmux/tmux.conf"
    vimrc_path: "{{ home_path }}/.vimrc"
    vimwiki_path: "{{ home_path }}/vimwiki"
    zprezto_path: "{{ home_path }}/.zprezto"
    vscode_path: "{{ home_path }}/.config/Code/User/settings.json"
  when: ansible_facts['os_family']|lower == 'debian' 

- name: Configure vim
  ansible.builtin.copy:
    src: vim/vimrc
    dest: "{{ vimrc_path }}"
    owner: "{{ user }}"
    mode: '0644'
  register: vim

- name: Install vim plugins
  ansible.builtin.shell:
    cmd: "vim +PlugInstall +qall"
  when: vim.changed

- name: Ensure vimwiki directory exists
  ansible.builtin.file:
    path: "{{ vimwiki_path }}"
    state: directory
    mode: '0755'

- name: Make tmux dir
  ansible.builtin.file:
    path: "{{ home_path }}/.tmux"
    owner: "{{ user }}"
    mode: '0644'
    state: directory

- name: Configure tmux
  ansible.builtin.copy:
    src: tmux/tmux.conf
    dest: "{{ tmuxconf_path }}"
    mode: '0644'


# screw it just uncomment the vscode extensions jawn
# it doesn't like to run as root and getting `stat` of local files is a pain

# https://stackoverflow.com/questions/50609345/compare-two-files-with-ansible
# compare if our vscode extensions currently installed match what we want
# - name: Get currently installed extensions
#   ansible.builtin.shell:
#     cmd: su - wbollock -c "code --list-extensions > {{ home_path }}/.current_extensions"

# - name: Stat current vscode extensions
#   ansible.builtin.stat:
#     path: "{{ home_path }}/.current_extensions"
#   register: current_extensions

# - name: Stat wanted vscode extensions
#   ansible.builtin.stat:
#     delegate_to: localhost
#     path: ../files/vscode/extensions_list
#   register: wanted_extensions

# - name: Set file checksum facts
#   set_fact:
#     cesha1: "{{ current_extensions.stat.checksum }}"
#     wesha1: "{{ wanted_extensions.stat.checksum }}"

# generate new extensons_list -> code --list-extensions > extensions_list
# https://stackoverflow.com/questions/35368889/how-can-i-export-settings
# need `code` binary
# cat extensions_list | xargs -L 1 echo code --install-extension
# - name: Vscode extensions install
#   ansible.builtin.shell:
#     cmd: cat ../files/vscode/extensions_list | xargs -L 1 code --install-extension
#   become_user: wbollock
#   when: "cesh1 != wesha1"

# - name: Remove current extensions list
#   ansible.builtin.file:
#     path: "{{ home_path }}/.current_extensions"
#     state: absent

- name: Vscode settings install
  ansible.builtin.copy:
    src: vscode/settings.json
    dest: "{{ vscode_path }}"
    mode: '0644'


# todo - set environment variables, zshrc, bashrc?, git config, aliases

# ZSH - https://github.com/wbollock/ansible/blob/master/roles/common/tasks/zsh.yaml
- name: Clone Prezto
  git: 
    repo: https://github.com/sorin-ionescu/prezto.git
    dest: "{{ zprezto_path }}"
    recursive: yes
    force: yes
  register: clone_prezto
# note: force yes will overwrite changes

- name: Setup Prezto
  file: 
    src: '{{ home_path }}/{{ item.src}}'
    dest: '{{ home_path }}/{{ item.dest}}'
    state: link
  loop:
    - { src: .zprezto/runcoms/zlogin, dest: .zlogin }
    - { src: .zprezto/runcoms/zlogout, dest: .zlogout }
  #  - { src: .zprezto/runcoms/zpreztorc, dest: .zpreztorc }
    - { src: .zprezto/runcoms/zprofile, dest: .zprofile }
    - { src: .zprezto/runcoms/zshenv, dest: .zshenv }
    # - { src: .zprezto/runcoms/zshrc, dest: .zshrc }

- name: Copy over custom zshrc
  ansible.builtin.copy:
    src: zsh/zshrc_{{ ansible_facts['os_family']|lower }}
    dest: "{{ home_path }}/.zshrc"
    mode: '0755'

- name: Download auto suggestions
  git: 
    repo: https://github.com/zsh-users/zsh-autosuggestions
    dest: "{{ home_path }}/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh"
  when: clone_prezto.changed
  ignore_errors: yes
  # error if already exists

- name: Set zpreztorc configuration, including theme and auto suggestions
  copy:
    src: zsh/zpreztorc
    dest: "{{ home_path }}/.zpreztorc"
    owner: "{{ user }}"
    mode: '0700'
